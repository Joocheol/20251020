# 프로젝트 개요

이 저장소에는 역사적 가격 데이터로부터 효율적 투자 프런티어를 근사하는 스크립트와, 생성된 산출물을 문서 형태로 확인할 수 있는 간단한 정적 웹 서버가 포함되어 있습니다.

## 주요 구성 요소
- `efficient_frontier.py`: CSV 가격 데이터를 이용해 연간 기대수익률과 변동성을 추정하고, 다양한 포트폴리오 조합을 평가하여 효율적 프런티어 테이블(`efficient_frontier.csv`)과 선택적으로 SVG 그래프를 생성합니다.
- `server.py`: `docs/` 디렉터리에 있는 정적 문서를 로컬 HTTP 서버로 제공합니다.
- `docs/`: 생성된 효율적 프런티어 결과와 사용법을 소개하는 정적 웹 페이지를 포함합니다.

# 실행 방법

## 1. 효율적 프런티어 계산하기
1. Python 3.9 이상이 설치되어 있는지 확인합니다.
2. 필요한 경우 가상환경을 생성하고 활성화합니다.
3. 추가 패키지가 필요하지 않으므로 표준 라이브러리만으로 실행할 수 있습니다. SVG 그래프를 생성하려면 `matplotlib`를 설치하세요.
   ```bash
   pip install matplotlib
   ```
4. 기본 제공 CSV(`temp.csv`)를 사용하여 효율적 프런티어를 계산하려면 다음 명령을 실행합니다.
   ```bash
   python efficient_frontier.py --csv temp.csv --output efficient_frontier.csv --plot efficient_frontier.svg
   ```
   - `--step`: 포트폴리오 가중치를 탐색할 간격(기본 0.01).
   - `--output`: 효율적 프런티어 테이블이 저장될 CSV 경로.
   - `--plot`: 효율적 프런티어 그래프를 저장할 파일 경로(SVG 또는 PNG 등).

## 2. 정적 문서 서버 실행하기
1. `docs/` 디렉터리에 `index.html`이 존재하는지 확인합니다(기본값 제공).
2. 다음 명령으로 로컬 서버를 실행합니다.
   ```bash
   python server.py --host 127.0.0.1 --port 8000 --directory docs
   ```
3. 브라우저에서 `http://127.0.0.1:8000/`을 열어 문서를 확인합니다.

## 3. 추가 CSV로 실행하기
다른 자산 가격 데이터를 사용하려면 `temp.csv`와 동일한 3단 헤더 구조(첫 열은 날짜, 나머지는 `Close` 행으로 표시된 종가 열`)를 갖춘 CSV 파일을 준비하세요.
준비한 파일 경로를 `--csv` 인자로 지정하면 해당 데이터로 효율적 프런티어를 계산할 수 있습니다.

# 참고 사항
- 입력 데이터에 결측치가 있는 경우 해당 거래일은 자동으로 건너뛰어집니다.
- `--step` 값을 줄이면 더 정밀한 프런티어를 얻을 수 있지만 계산 시간이 늘어납니다.
- 서버 실행 시 지정한 포트가 이미 사용 중이면 오류 메시지가 출력됩니다. 다른 포트를 지정해 재시도하세요.
